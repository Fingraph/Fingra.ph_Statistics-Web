<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Copyright 2014 tgrape Inc.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="today">

	<!-- ================================= New Users ======================================================================================================== -->	
	<!-- Today : figure -->
	<select id="getNewUsersTimelyFigures" parameterType="FingraphSearchParam" resultType="Figures">
		SELECT
			IFNULL(SUM(value),0) total,
	        IFNULL(AVG(IFNULL(value,0)),0) average,
			IFNULL(MAX(IFNULL(value,0)),0) maximum,
	        IFNULL(MIN(IFNULL(value,0)),0) minimum,
			IFNULL(STD(IFNULL(value,0)),0) stddev
		FROM
			(SELECT hour FROM times_dimension WHERE hour <![CDATA[ < ]]> #{nowTime}) d
			LEFT OUTER JOIN
			(
				SELECT hour, newuser value
				FROM st_newuser_hour
				WHERE appkey = #{appkey}
					<choose>
						<when test="nowTime eq 24 ">
							and date(datehour) = date(#{today})
						</when>
						<otherwise>
							and date(datehour) = #{today}
							and hour <![CDATA[ < ]]> #{nowTime}
						</otherwise>
					</choose>
			) b
			ON d.hour=b.hour
	</select>

	<!-- Today : Line graph -->
	<select id="getNewUsersTimelyInfoList" parameterType="FingraphSearchParam" resultType="TimeSeriesData">
		select t.hour date, IFNULL(n.value,0) value
		from
			(select HOUR from times_dimension
				where HOUR <![CDATA[ < ]]> #{nowTime}
			) t
		    left outer join
		    	(select hour, newuser value
		        from st_newuser_hour
		        where appkey = #{appkey}
					<choose>
						<when test="nowTime eq 24 ">
							and date(datehour) = date(#{today})
						</when>
						<otherwise>
							and date(datehour) = #{today}
							and hour <![CDATA[ < ]]> #{nowTime}
						</otherwise>
					</choose>
		        ) n
		    on t.hour = n.hour
		    ORDER BY date
	</select>

	<!-- ================================= Active Users =========================================================================== -->
	<!-- Today : figure -->
	<select id="getActiveUsersTimelyFigures" parameterType="FingraphSearchParam" resultType="Figures">
		SELECT
			IFNULL(SUM(value),0) total,
	        IFNULL(AVG(IFNULL(value,0)),0) average,
			IFNULL(MAX(IFNULL(value,0)),0) maximum,
	        IFNULL(MIN(IFNULL(value,0)),0) minimum,
			IFNULL(STD(IFNULL(value,0)),0) stddev
		FROM
			(SELECT hour FROM times_dimension WHERE hour <![CDATA[ < ]]> #{nowTime}) d
			LEFT OUTER JOIN
			(
				SELECT hour, user value
				FROM st_user_hour
				WHERE appkey = #{appkey}
					<choose>
						<when test="nowTime eq 24 ">
							and date(datehour) = date(#{today})
						</when>
						<otherwise>
							and date(datehour) = #{today}
							and hour <![CDATA[ < ]]> #{nowTime}
						</otherwise>
					</choose>
			) b
			ON d.hour=b.hour
	</select>

	<!-- Today : Line graph -->
	<select id="getActiveUsersTimelyInfoList" parameterType="FingraphSearchParam" resultType="TimeSeriesData">
		select t.hour date, IFNULL(n.value,0) value
		from
			(select HOUR from times_dimension
				where HOUR <![CDATA[ < ]]> #{nowTime}
			) t
		    left outer join
		    	(select hour, user value
		        from st_user_hour
		        where appkey = #{appkey}
					<choose>
						<when test="nowTime eq 24 ">
							and date(datehour) = date(#{today})
						</when>
						<otherwise>
							and date(datehour) = #{today}
							and hour <![CDATA[ < ]]> #{nowTime}
						</otherwise>
					</choose>
		        ) n
		    on t.hour = n.hour
		    ORDER BY date
	</select>


	<!-- ================================= sessions ========================================================================================================= -->
	<!-- Today : figure -->
	<select id="getSessionsTimelyfigures" parameterType="FingraphSearchParam" resultType="Figures">
		SELECT
			IFNULL(SUM(value),0) total,
	        IFNULL(AVG(IFNULL(value,0)),0) average,
			IFNULL(MAX(IFNULL(value,0)),0) maximum,
	        IFNULL(MIN(IFNULL(value,0)),0) minimum,
			IFNULL(STD(IFNULL(value,0)),0) stddev
		FROM
			(SELECT hour FROM times_dimension WHERE hour <![CDATA[ < ]]> #{nowTime}) d
			LEFT OUTER JOIN
			(
				SELECT hour, session value
				FROM st_session_hour
				WHERE appkey = #{appkey}
					<choose>
						<when test="nowTime eq 24 ">
							and date(datehour) = date(#{today})
						</when>
						<otherwise>
							and date(datehour) = #{today}
							and hour <![CDATA[ < ]]> #{nowTime}
						</otherwise>
					</choose>
			) b
			ON d.hour=b.hour
	</select>
	
	<!-- Today : Line graph -->
	<select id="getSessionTimelyInfoList" parameterType="FingraphSearchParam" resultType="TimeSeriesData">
		select t.hour date, IFNULL(n.value,0) value
		from
			(select HOUR from times_dimension
				where HOUR <![CDATA[ < ]]> #{nowTime}
			) t
		    left outer join
		    	(select hour, session value
		        from st_session_hour
		        where appkey = #{appkey}
					<choose>
						<when test="nowTime eq 24 ">
							and date(datehour) = date(#{today})
						</when>
						<otherwise>
							and date(datehour) = #{today}
							and hour <![CDATA[ < ]]> #{nowTime}
						</otherwise>
					</choose>
		        ) n
		    on t.hour = n.hour
		    ORDER BY date
	</select>

	<!-- Today : time series session graph -->
	<select id="getSessionTimeSeriesList" parameterType="FingraphSearchParam" resultType="FrequencyData">
		SELECT
			d.hour date,
			IFNULL(freq_user_1,0) freq_user_1, IFNULL(freq_user_2,0) freq_user_2,
			IFNULL(freq_user_3_4,0) freq_user_3_4, IFNULL(freq_user_5_6,0) freq_user_5_6,
			IFNULL(freq_user_7_9,0) freq_user_7_9, IFNULL(freq_user_10_14,0) freq_user_10_14,
		    IFNULL(freq_user_15_19,0) freq_user_15_19, IFNULL(freq_user_20_49,0) freq_user_20_49,
		    IFNULL(freq_user_50_99,0) freq_user_50_99, IFNULL(freq_user_100_499,0) freq_user_100_499,
		    IFNULL(freq_user_over_500,0) freq_user_over_500
		FROM
			(SELECT hour FROM times_dimension WHERE  hour <![CDATA[ < ]]> #{nowTime}) d
			LEFT OUTER JOIN
			(
				SELECT *
				FROM st_frequency_hour
				WHERE appkey= #{appkey}
					<choose>
						<when test="nowTime eq 24 ">
							and date(datehour) = date(#{today})
						</when>
						<otherwise>
							and date(datehour) = #{today}
							and hour <![CDATA[ < ]]> #{nowTime}
						</otherwise>
					</choose>
			) a
			ON d.hour=a.hour
	</select>


	<!-- Today : Frequency Ranges graph -->
	<select id="getFrequencyTimelyRanges" parameterType="FingraphSearchParam" resultType="FrequencyData">
		SELECT
			IFNULL(SUM(freq_user_1),0) AS freq_user_1, IFNULL(SUM(freq_user_2),0) AS freq_user_2,
			IFNULL(SUM(freq_user_3_4),0) AS freq_user_3_4, IFNULL(SUM(freq_user_5_6),0) AS freq_user_5_6,
			IFNULL(SUM(freq_user_7_9),0) AS freq_user_7_9, IFNULL(SUM(freq_user_10_14),0) AS freq_user_10_14,
			IFNULL(SUM(freq_user_15_19),0) AS freq_user_15_19
		FROM st_frequency_hour
		WHERE appkey=#{appkey}
			<choose>
				<when test="nowTime eq 24 ">
					and date(datehour) = date(#{today})
				</when>
				<otherwise>
					and date(datehour) = #{today}
					and hour <![CDATA[ < ]]> #{nowTime}
				</otherwise>
			</choose>
	</select>


	<!-- ================================= sessions Length ============================================================================================= -->
	<!-- Today : figure -->
	<select id="getSessionLengthFigures" parameterType="FingraphSearchParam" resultType="Figures">
	SELECT
		a.median, c.most
	FROM
		(
			SELECT IFNULL(avg(t1.sessionlength),0) as median 
  			FROM 
       			(SELECT @rownum:=@rownum+1 as `row_number`, IFNULL(d.sessionlength,0) sessionlength
         			FROM st_sessionlength_hour d, (SELECT @rownum:=0) r 
         			WHERE 1 and appkey=#{appkey}
					<choose>
						<when test="nowTime eq 00">
							and date(datehour) = date(#{yesterday})
						</when>
						<otherwise>
							and date(datehour) = date(#{today})
							and hour  <![CDATA[ < ]]> #{nowTime}
						</otherwise>
					</choose>
         			ORDER BY d.sessionlength 
       			) as t1,
       			(SELECT count(*) as total_rows 
         		FROM st_sessionlength_hour d 
        		WHERE 1 and appkey=#{appkey}
					<choose>
						<when test="nowTime eq 00">
							and date(datehour) = date(#{yesterday})
						</when>
						<otherwise>
							and date(datehour) = date(#{today})
							and hour  <![CDATA[ < ]]> #{nowTime}
						</otherwise>
					</choose>
       			) as t2 
 			WHERE 1 
       		AND t1.row_number <![CDATA[ >= ]]> total_rows/2 
       		AND t1.row_number <![CDATA[ <= ]]> total_rows/2+1
		) a,
		(
			SELECT CASE GREATEST(under_three_sec, three_ten_sec, ten_thirty_sec, thirty_sixty_sec, one_three_min, three_ten_min, ten_thirty_min, over_thirty_min)
				WHEN under_three_sec THEN '0~3 sec'
				WHEN three_ten_sec THEN '3~10 sec'
				WHEN ten_thirty_sec THEN '10~30 sec'
				WHEN thirty_sixty_sec THEN '30~60 sec'
				WHEN one_three_min THEN '1~3 min'
				WHEN three_ten_min THEN '3~10 min'
				WHEN ten_thirty_min THEN '10~30 min'
				WHEN over_thirty_min THEN 'over 30 min'
				END most
			FROM
				(
					SELECT
						IFNULL(SUM(under_three_sec),0) under_three_sec, IFNULL(SUM(three_ten_sec),0) three_ten_sec,
						IFNULL(SUM(ten_thirty_sec),0) ten_thirty_sec, IFNULL(SUM(thirty_sixty_sec),0) thirty_sixty_sec,
						IFNULL(SUM(one_three_min),0) one_three_min, IFNULL(SUM(three_ten_min),0) three_ten_min,
						IFNULL(SUM(ten_thirty_min),0) ten_thirty_min, IFNULL(SUM(over_thirty_min),0) over_thirty_min
					FROM st_sessionlength_section_hour
					WHERE appkey=#{appkey}
					<choose>
						<when test="nowTime eq 24 ">
							and date(datehour) = date(#{today})
						</when>
						<otherwise>
							and date(datehour) = #{today}
							and hour <![CDATA[ < ]]> #{nowTime}
						</otherwise>
					</choose>
				) b
		) c
	</select>


	<!-- Today : Line graph -->
	<select id="getSessionLengthList" parameterType="FingraphSearchParam" resultType="TimeSeriesData">
		select t.hour date, IFNULL(n.value,0) value
		from
			(select HOUR from times_dimension
				where HOUR <![CDATA[ < ]]> #{nowTime}
			) t
		    left outer join
		    	(select hour, sessionlength value
		        from st_sessionlength_hour
		        where appkey = #{appkey}
					<choose>
						<when test="nowTime eq 24 ">
							and date(datehour) = date(#{today})
						</when>
						<otherwise>
							and date(datehour) = #{today}
							and hour <![CDATA[ < ]]> #{nowTime}
						</otherwise>
					</choose>
		        ) n
		    on t.hour = n.hour
		    ORDER BY date
	</select>


	<!-- Today : time series sessionLength Frequency graph -->
	<select id="getSessionLengthFrequencyList" parameterType="FingraphSearchParam" resultType="SessionLengthData">
		select t.hour date,
			IFNULL(under_three_sec,0) under_three_sec, IFNULL(three_ten_sec,0) three_ten_sec,
			IFNULL(ten_thirty_sec,0) ten_thirty_sec, IFNULL(thirty_sixty_sec,0) thirty_sixty_sec,
			IFNULL(one_three_min,0) one_three_min, IFNULL(three_ten_min,0) three_ten_min,
			IFNULL(ten_thirty_min,0) ten_thirty_min, IFNULL(over_thirty_min,0) over_thirty_min
		from
			(select hour from times_dimension where hour <![CDATA[ < ]]> #{nowTime}) t
		    left outer join
		    	(select * FROM st_sessionlength_section_hour
		        	where appkey = #{appkey}
					<choose>
						<when test="nowTime eq 24 ">
							and date(datehour) = date(#{today})
						</when>
						<otherwise>
							and date(datehour) = #{today}
							and hour <![CDATA[ < ]]> #{nowTime}
						</otherwise>
					</choose>
		        ) s
		    on t.hour=s.hour
		    ORDER BY date
	</select>


	<!-- Today : Frequency Ranges graph -->
	<select id="getSessionLengthFrequency" parameterType="FingraphSearchParam" resultType="SessionLengthData">
		select
			IFNULL(SUM(under_three_sec),0) under_three_sec, IFNULL(SUM(three_ten_sec),0) three_ten_sec,
			IFNULL(SUM(ten_thirty_sec),0) ten_thirty_sec, IFNULL(SUM(thirty_sixty_sec),0) thirty_sixty_sec,
			IFNULL(SUM(one_three_min),0) one_three_min, IFNULL(SUM(three_ten_min),0) three_ten_min,
			IFNULL(SUM(ten_thirty_min),0) ten_thirty_min, IFNULL(SUM(over_thirty_min),0) over_thirty_min
		from st_sessionlength_section_hour
		where appkey=#{appkey}
			<choose>
				<when test="nowTime eq 24 ">
					and date(datehour) = date(#{today})
				</when>
				<otherwise>
					and date(datehour) = #{today}
					and hour <![CDATA[ < ]]> #{nowTime}
				</otherwise>
			</choose>
	</select>


	<!-- ================================= pageViews ========================================================================================================= -->
	<!-- Today : figure -->
	<select id="getPageViewsTimelyFigures" parameterType="FingraphSearchParam" resultType="Figures">
		SELECT
			IFNULL(SUM(value),0) total,
	        IFNULL(AVG(IFNULL(value,0)),0) average,
			IFNULL(MAX(IFNULL(value,0)),0) maximum,
	        IFNULL(MIN(IFNULL(value,0)),0) minimum,
			IFNULL(STD(IFNULL(value,0)),0) stddev
		FROM
			(SELECT hour FROM times_dimension WHERE hour <![CDATA[ < ]]> #{nowTime}) d
			LEFT OUTER JOIN
			(
				SELECT hour, pageview value
				FROM st_pageview_hour
				WHERE appkey = #{appkey}
					<choose>
						<when test="nowTime eq 24 ">
							and date(datehour) = date(#{today})
						</when>
						<otherwise>
							and date(datehour) = #{today}
							and hour <![CDATA[ < ]]> #{nowTime}
						</otherwise>
					</choose>
			) b
			ON d.hour=b.hour
	</select>

	<!-- Today : Line graph -->
	<select id="getPageViewsTimelyInfoList" parameterType="FingraphSearchParam" resultType="TimeSeriesData">
		select t.hour date, IFNULL(n.value,0) value
		from
			(select HOUR from times_dimension
				where HOUR <![CDATA[ < ]]> #{nowTime}
			) t
		    left outer join
		    	(select hour, pageview value
		        from st_pageview_hour
		        where appkey = #{appkey}
					<choose>
						<when test="nowTime eq 24 ">
							and date(datehour) = date(#{today})
						</when>
						<otherwise>
							and date(datehour) = #{today}
							and hour <![CDATA[ < ]]> #{nowTime}
						</otherwise>
					</choose>
		        ) n
		    on t.hour = n.hour
		    ORDER BY date
	</select>
	
</mapper>
